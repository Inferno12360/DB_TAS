Natürlich, hier ist ein einfaches Beispiel für einen Delete-Button in PHP mit PDO:

```php
<?php
// Verbindung zur Datenbank herstellen
$servername = "Dein_Servername";
$username = "Dein_Benutzername";
$password = "Dein_Passwort";
$dbname = "Dein_Datenbankname";

try {
    $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Verbindung fehlgeschlagen: " . $e->getMessage();
}

// Überprüfen, ob der Lösch-Button geklickt wurde
if(isset($_POST['delete_button'])) {
    // ID des zu löschenden Datensatzes
    $id_to_delete = $_POST['id_to_delete'];

    // SQL-Statement für das Löschen des Datensatzes
    $sql = "DELETE FROM deine_tabelle WHERE id = :id";

    // Prepared Statement vorbereiten
    $stmt = $conn->prepare($sql);

    // Parameter binden
    $stmt->bindParam(':id', $id_to_delete);

    // SQL-Statement ausführen
    $stmt->execute();

    // Erfolgsmeldung
    echo "Datensatz erfolgreich gelöscht";
}

// Daten aus der Datenbank abrufen und anzeigen
$sql = "SELECT * FROM deine_tabelle";
$result = $conn->query($sql);

echo "<table border='1'>";
echo "<tr><th>ID</th><th>Name</th><th>Aktion</th></tr>";

foreach($result as $row) {
    echo "<tr><td>".$row['id']."</td><td>".$row['name']."</td><td>
    <form method='post' action='dein_php_dateiname.php'>
    <input type='hidden' name='id_to_delete' value='".$row['id']."'>
    <input type='submit' name='delete_button' value='Löschen'>
    </form></td></tr>";
}

echo "</table>";

// Datenbankverbindung schließen
$conn = null;
?>
```

Ersetze `Dein_Servername`, `Dein_Benutzername`, `Dein_Passwort`, `Dein_Datenbankname` und `deine_tabelle` durch deine eigenen Daten. Dieses Beispiel zeigt eine einfache Tabelle mit Datensätzen aus der Datenbank und einem Löschen-Button für jeden Datensatz.
